name: Release

on:
  release:
    types:
      - created

jobs:
  gem:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Build gem
        run: gem build

      - name: Create credentials
        run: |
          mkdir ~/.gem
          cat << EOF > ~/.gem/credentials
          ---
          :rubygems_api_key: ${{ secrets.RUBYGEMS_TOKEN }}
          EOF
          chmod 0600 /home/runner/.gem/credentials

      - name: Push gem
        run: gem push *gem

  docker:
    name: Docker

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version components
        id: extract-version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          IFS='.' read -r -a VERSION_PARTS <<< "${VERSION}"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"

          echo "MAJOR=${MAJOR}"
          echo "MINOR=${MINOR}"
          echo "PATCH=${PATCH}"

          # echo "MAJOR=${MAJOR}" >> $GITHUB_ENV
          # echo "MINOR=${MINOR}" >> $GITHUB_ENV
          # echo "PATCH=${PATCH}" >> $GITHUB_ENV

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v6
      #   env:
      #     IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
      #   with:
      #     push: true
      #     tags: |
      #       ${IMAGE_NAME}:${MAJOR},
      #       ${IMAGE_NAME}:${MAJOR}.${MINOR},
      #       ${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}

      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
